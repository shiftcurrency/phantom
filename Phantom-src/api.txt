curl -X POST --data '{"jsonrpc":"2.0","method":"get_blockdata","params":["200", "false"]}' http://localhost:53903

Parameter list: [0] == block number
Parameter list: [1] == true/false. If set to true it returns full block data.

curl -X POST --data '{"jsonrpc":"2.0","method":"create_account","params":["password"]}' http://localhost:53903

Returns account address

curl -X POST --data '{"jsonrpc":"2.0","method":"unlock_account","params":["0x2e201bf5a75ba5d58af0ae919ab580995cf63f9b", "password"]}' http://localhost:53903

Returns true or false

curl -X POST --data '{"jsonrpc":"2.0","method":"net_listening","params":[]}' http://localhost:53903

Returns true or false

curl -X POST --data '{"jsonrpc":"2.0","method":"send_transaction","params":[{"from": "0x83b5f6de85e6d5482992ee467808682b01a95e25", "to": "0x2e201bf5a75ba5d58af0ae919ab580995cf63f9b","amount": "1", "password" : "password" }]}' http://localhost:53903

Returns transaction hash

curl -X POST --data '{"jsonrpc":"2.0","method":"get_balance","params":["0x2e201bf5a75ba5d58af0ae919ab580995cf63f9b", "latest"]}' http://localhost:53903

Returns balance of account

curl -X POST --data '{"jsonrpc":"2.0","method":"get_accounts","params":[]}' http://localhost:53903

Returns a list of accounts

curl -X POST --data '{"jsonrpc":"2.0","method": "create_site","params":[]}' http://localhost:53903

Returns site address (bitcoin hash) and the private key (needs to be save to be able to edit and sign website)

curl -X POST --data '{"jsonrpc":"2.0","method": "net_peercount","params":[]}' http://localhost:53903

Returns number of connected peers

curl -X POST --data '{"jsonrpc":"2.0","method": "get_blocknumber","params":[]}' http://localhost:53903

Returns block number as integer



Create a new message identity, returns a hash.

curl -X POST --data '{"jsonrpc":"2.0","method": "new_message_ident","params":[]}' http://localhost:53903


Check if the identity still exists and can be used (only valid locally, no point in checking this in the network, it wont show up)

curl -X POST --data '{"jsonrpc":"2.0","method": "message_ident_exists","params":["0x041c5af06aad7f1b141e1ad81c74acff2d6c8b49e680ac4c3c885ee60649a0cf400d86cfdab168c71219d1c4e28a8e9693fa4552fd9d508c8faef19e80083632d4"]}' http://localhost:53903


Get transaction history (use account without prepending "0x" as parameter)

curl -X POST --data '{"jsonrpc":"2.0","method": "get_transaction_history","params":["0a05debe9ddc4f705b460ec1bdba3cbf63637f42"]}' http://localhost:53903

Store address and alias in address book

curl -X POST --data '{"jsonrpc":"2.0","method": "store_address_book","params":["0a05debe9ddc4f705b460ec1bdba3cbf63637f42","dlow"]}' http://localhost:53903

Get address book data

curl -X POST --data '{"jsonrpc":"2.0","method": "get_address_book","params":[]}' http://localhost:53903

Delete entry in address book

curl -X POST --data '{"jsonrpc":"2.0","method": "del_address_book","params":["0a05debe9ddc4f705b460ec1bdba3cbf63637f42"]}' http://localhost:53903

1. Create contract

curl -X POST --data '{"jsonrpc":"2.0","method": "create_contract","params":[{"from_account":"0x82b5f6de85e6d5982992ee417808682b01a91e25", "gas" : "1000000", "source" : "60606040526104be806100126000396000f360606040526000357c01000000000000000000000000000000000000000000000000000000009004806323bee4d114610044578063b5d560271461010657610042565b005b6100986004808035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506101a3565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600f02600301f150905090810190601f1680156100f85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a16004808035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019082018035906020019191908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509090919050506102a3565b005b6020604051908101604052806000815260200150600060005082604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506000016000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102925780601f1061026757610100808354040283529160200191610292565b820191906000526020600020905b81548152906001019060200180831161027557829003601f168201915b5050505050905061029e565b919050565b60001515600060005083604051808280519060200190808383829060006004602084601f0104600f02600301f150905001915050908152602001604051809103902060005060010160149054906101000a900460ff16151514156104b95780600060005083604051808280519060200190808383829060006004602084601f0104600f02600301f15090500191505090815260200160405180910390206000506000016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061039257805160ff19168380011785556103c3565b828001600101855582156103c3579182015b828111156103c25782518260005055916020019190600101906103a4565b5b5090506103ee91906103d0565b808211156103ea57600081815060009055506001016103d0565b5090565b505033600060005083604051808280519060200190808383829060006004602084601f0104600f02600301f150905001915050908152602001604051809103902060005060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055506001600060005083604051808280519060200190808383829060006004602084601f0104600f02600301f150905001915050908152602001604051809103902060005060010160146101000a81548160ff021916908302179055505b5b505056", "password" : "xxxx"}], "id":"1"}' http://localhost:53903

This will give us a contractAddress of 0xa69818b38011e84dbc98bd0f180e6084855eae2e which is retrived by the api method "get_tx_receipt"

2. Set contract storage

We use  the contract address as the "to" address and our own account as "from" address where the gas will be paid from.

curl -g -X POST --data '{"jsonrpc":"2.0","method": "set_contract_storage","params":[{"from":"0x82b5f6de85e6d5982992ee417808682b01a91e25", "to" : "0xa69818b38011e84dbc98bd0f180e6084855eae2e", "function_signature" : "setRR(string,string)", "function_argument" : ["domain.shift", "1jahd8882jjsjjshd883sh7sjj3d3"], "gas" : "300000", "password" : "xxxx"}], "id":"1"}' http://localhost:53903

3. Test the storage

curl -g -X POST --data '{"jsonrpc":"2.0","method": "get_contract_storage","params":[{"to" : "0xa69818b38011e84dbc98bd0f180e6084855eae2e", "function_signature" : "getRR(string)", "function_argument" : ["domain.shift"], "return_type" : ["string"], "id":"1"}]}' http://localhost:53903

This returns,

["1jahd8882jjsjjshd883sh7sjj3d3"]


Shift Domain Name System

curl -g -X POST --data '{"jsonrpc":"2.0","method": "resolve_phantom_domain","params":[{"domain" : "walletdev.shift"}], "id":"1"}' http://localhost:53903

curl -g -X POST --data '{"jsonrpc":"2.0","method": "create_phantom_domain","params":[{"from":"0x82b5f6de85e6d5982992ee467808682b01a95e24", "contract_address" : "0xa69818b38011e84dbc98bd0f180e6084855eae2e", "domain" : "wallet_dev.shift", "domain_address" : "1Pz5E5vnZy5jSqLSQhuNyeK9QxpHGrxGKG", "password" : "xxxx"}], "id":"1"}' http://localhost:53903

Index a domain on Phantom (this enables full redudant backup of your site)

curl -g -X POST --data '{"jsonrpc":"2.0","method": "index_phantom_domain", "params":[{"from": "0x82b5f6de85e6d5982992ee467808682b01a95e24", "password": "xxx", "domain": "test1.shift", "site_address":"1CQTfYmebR1bP75PCUata417NffWyL6AXf", "wallet_address":"619f79b01cc1f14316b0edb91e714979787b58ee"}], "id":"1"}' http://localhost:53903

curl -g -X POST --data '{"jsonrpc":"2.0","method": "search_domain_index","params":[{"wallet_address" : "619f79b01cc1f14316b0edb91e714979787b58ee"}], "id":"1"}' http://localhost:53903

result: {"jsonrpc": "2.0", "id": "1", "result": ["test1.shift"]}
